name: Reusable Deploy to Pantheon Multidev

on:
  workflow_call:
    inputs:
      pantheon_site:
        description: 'Pantheon site name'
        required: true
        type: string
      target_env:
        description: 'Target environment name'
        required: true
        type: string
    secrets:
      PANTHEON_SSH_KEY:
        required: true
      PANTHEON_MACHINE_TOKEN:
        required: true

defaults:
  run:
    shell: bash

jobs:
  deploy_to_multidev:
    name: Deploy To Multidev ${{ inputs.target_env }}
    permissions:
      deployments: write
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Deploy to Pantheon multidev
      uses: pantheon-systems/push-to-pantheon@0.7.0
      with:
        ssh_key: ${{ secrets.PANTHEON_SSH_KEY }}
        machine_token: ${{ secrets.PANTHEON_MACHINE_TOKEN }}
        site: ${{ inputs.pantheon_site }}
        target_env: ${{ inputs.target_env }}
        git_user_name: ${{ github.event.pull_request.user.login || github.actor }}
        git_user_email: ${{ github.event.pull_request.user.email || format('{0}@users.noreply.github.com', github.actor) }}
        git_commit_message: "Automated deployment from GitHub Actions to multidev ${{ inputs.target_env }}"
        delete_old_environments: false
        clone_content: false

    - name: Run config imports and db updates
      env:
        TERMINUS_MACHINE_TOKEN: ${{ secrets.PANTHEON_MACHINE_TOKEN }}
      run: |
        terminus -n drush ${{ inputs.pantheon_site }}.${{ inputs.target_env }} -- updb -y
        terminus -n drush ${{ inputs.pantheon_site }}.${{ inputs.target_env }} -- cim -y
        terminus -n drush ${{ inputs.pantheon_site }}.${{ inputs.target_env }} -- cr -y

    - name: Get multidev URL
      id: multidev_url
      env:
        TERMINUS_MACHINE_TOKEN: ${{ secrets.PANTHEON_MACHINE_TOKEN }}
      run: |
        URL=$(terminus env:view ${{ inputs.pantheon_site }}.${{ inputs.target_env }} --print)
        echo "url=$URL" >> $GITHUB_OUTPUT
        echo "Multidev environment available at: $URL"

    - name: Comment on PR with multidev URL
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/github-script@v7
      with:
        script: |
          const url = '${{ steps.multidev_url.outputs.url }}';
          const comment = `ðŸš€ **Multidev Environment Ready!**

          Your changes have been deployed to: [${url}](${url})

          Environment: \`${{ inputs.target_env }}\`
          Site: \`${{ inputs.pantheon_site }}\``;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });